api:
  type: php:8.2
  size: S
  disk: 768

  timezone: Europe/Paris

  runtime:
    extensions:
      - xsl
      - mbstring
      - sodium
      - ctype
      - iconv
      - pdo_pgsql
      - pdo_mysql
      - amqp

  build:
    flavor: none

  web:
    locations:
      '/api':
        root: 'public'
        passthru: '/api/index.php'
        # No caching for static files.
        # (Dynamic pages use whatever cache headers are generated by the program.)
        index:
          - index.php
        expires: -1
        scripts: true
        allow: true

  relationships:
    database: "database:postgresql"

  mounts:
    "public/bundles": { source: local, source_path: public/bundles }
    "var": { source: local, source_path: var }
    "config/jwt": { source: local, source_path: config/jwt }

  hooks:
    build: |
      set -x -e
      
      curl -s https://get.symfony.com/cloud/configurator | (>&2 bash)
      (>&2 COMPOSER_FLAGS="--ignore-platform-reqs" symfony-build)
      
      if [ "$PLATFORM_BRANCH" = "main" ]; then
          symfony console assets:install
      fi

    deploy: |
      set -x -e
      
      (>&2 symfony-deploy)
      
      if [ "$PLATFORM_BRANCH" != "main" ]; then
          symfony console app:database:anonymize
      fi
      
      symfony console lexik:jwt:generate-keypair --skip-if-exists

  source:
    root: api

web:
  type: nodejs:20
  size: S
  disk: 150

  timezone: Europe/Paris

  build:
    flavor: none

  dependencies:
    nodejs:
      yarn: "^1.22.17"

  mounts:
    '/_next':
      source: local
      source_path: '_next'

  hooks:
    build: |
      set -x -e

      env
      yarn install
      yarn build

  web:
    commands:
      start: npx next start -p $PORT
  source:
    root: web

mercure:
  type: golang:1.18

  disk: 1024

  mounts:
    "database": { source: local, source_path: "database" }
    "/.local": { source: local, source_path: .local }
    "/.config": { source: local, source_path: .config }

  web:
    commands:
      start: ./mercure run --config Caddyfile.platform_sh
    locations:
      /:
        allow: true
        scripts: false
        passthru: true
        request_buffering:
          enabled: false

  variables:
    env:
      MERCUREVERSION: 0.14.4
      SERVER_NAME: ":8888"
      MERCURE_TRANSPORT_URL: "bolt:///var/run/mercure.db"
      MERCURE_EXTRA_DIRECTIVES: |
        cors_origin *
        publish_origins *
        subscriptions
        demo
      GLOBAL_OPTIONS: |
        auto_https off
      MERCURE_PUBLISHER_JWT_KEY: "!ChangeThisMercureHubJWTSecretKey!"
      MERCURE_SUBSCRIBER_JWT_KEY: "!ChangeThisMercureHubJWTSecretKey!"

  build:
    flavor: none

  hooks:
    build: |
      #Install Mercure using cache
      echo "${MERCUREVERSION}"
      FILE="mercure_${MERCUREVERSION}_Linux_x86_64.tar.gz"
      if [ ! -f "$PLATFORM_CACHE_DIR/$FILE" ]; then
        URL="https://github.com/dunglas/mercure/releases/download/v${MERCUREVERSION}/$FILE"
        echo "Downloading $URL"
        wget -O "$PLATFORM_CACHE_DIR/$FILE" $URL
      else
        echo "Found $FILE in cache, using cache"
      fi
      file $PLATFORM_CACHE_DIR/$FILE
      tar xvzf $PLATFORM_CACHE_DIR/$FILE

  source:
    root: mercure/.config
